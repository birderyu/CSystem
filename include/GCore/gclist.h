/********************************************************************************
**
** GSystem: A quick, micro library of C++
**
** @file gclist.h
** @brief 循环链表（circular linked list）
** @author birderyu
** @contact https://github.com/birderyu
** @date 2016-08-07
** @version 1.0.0
**
** 循环链表是概念上的，实际上链表的最后一个节点并未指向其头节点。
**
********************************************************************************/

#ifndef _CORE_CIRCULAR_LINKED_LIST_H_
#define _CORE_CIRCULAR_LINKED_LIST_H_

#include "gslist.h"

namespace gsystem { // gsystem

/********************************************************************************
**
** @brief 循环链表
** @template T {type} 链表元素值的类型
** @template NodeT {type} 链表节点的类型
**
********************************************************************************/
template<typename T, typename NodeT = GSListNode<T>>
class GCList 
	: public GSList<T, NodeT>
{
public:
	/****************************************************************************
	**
	** @name GCList
	** @brief 构造函数（constructor）
	**
	****************************************************************************/
	GCList();

	/****************************************************************************
	**
	** @name GetNextNode
	** @brief 获取下一个节点
	** @return {Node *} 节点的指针
	**
	****************************************************************************/
	Node *GetNextNode();

	/****************************************************************************
	**
	** @name GetNextNode
	** @brief 获取下一个节点
	** @return {const Node *} 节点的指针
	**
	****************************************************************************/
	const Node *GetNextNode() const;

	/****************************************************************************
	**
	** @name GetCurrentIndex
	** @brief 获取当前节点的下标
	** @return {gsize} 元素的下标，从0开始计数，若无则返回NULL_POS
	**
	****************************************************************************/
	gsize GetCurrentIndex() const;

	/****************************************************************************
	**
	** @name GetCurrentNode
	** @brief 获取当前节点
	** @return {Node *} 节点的指针
	**
	****************************************************************************/
	Node *GetCurrentNode();

	/****************************************************************************
	**
	** @name GetCurrentNode
	** @brief 获取当前节点
	** @return {const Node *} 节点的指针
	**
	****************************************************************************/
	const Node *GetCurrentNode() const;

	/****************************************************************************
	**
	** @name RemoveAt
	** @brief 移除指定位置的元素
	** @param [in] pos {gsize} 元素的下标，从0开始计数
	** @param [out] value {T *} 该位置上的值，若传入参数为GNULL则说明不需要此返回值
	** @see GSList::RemoveAt
	**
	****************************************************************************/
	gvoid RemoveAt(gsize pos, T *value = GNULL);
	
protected:
	/****************************************************************************
	**
	** 当前节点的游标
	**
	****************************************************************************/
	Node *m_pCursor;
};

} // namespace gsystem

#include "inline/gclist.inl"

#endif // _CORE_CIRCULAR_LINKED_LIST_H_