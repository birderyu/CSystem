/********************************************************************************
**
** GSystem: A quick, micro library of C++
**
** @file giterator.h
** @brief 迭代器接口
** @author birderyu
** @contact https://github.com/birderyu
** @date 2017-7-22
** @version 1.0.0
**
********************************************************************************/

#ifndef _CORE_ITERATOR_H_
#define _CORE_ITERATOR_H_

namespace gsystem { // gsystem

/********************************************************************************
**
** @brief 迭代器
** @template T {type} 迭代器元素的类型
**
********************************************************************************/
template <typename T>
class GIterator
{
public:
	/****************************************************************************
	**
	** @name ~GIterator
	** @brief 析构函数（destructor）
	**
	****************************************************************************/
	virtual ~GIterator() = 0 {}

	/****************************************************************************
	**
	** @name HasNext
	** @brief 是否具有下一个元素
	** @return {gbool} 若还有下一个元素，则返回true，否则返回false
	**
	****************************************************************************/
	virtual gbool HasNext() const = 0;

	/****************************************************************************
	**
	** @name Next
	** @brief 获取下一个元素
	** @return {const T &} 元素
	**
	****************************************************************************/
	virtual const T &Next() = 0;

	/****************************************************************************
	**
	** @name Close
	** @brief 关闭迭代器
	**
	****************************************************************************/
	virtual gvoid Close() = 0;
};

} // namespace gsystem

#endif // _CORE_ITERATOR_H_
