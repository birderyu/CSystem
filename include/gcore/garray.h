/********************************************************************************
**
** gsystem: A quick, micro library of C++
**
** @file garray.h
** @brief 鏁扮粍鎺ュ彛
** @author birderyu
** @contact https://github.com/birderyu
** @date 2017-1-24
** @version 1.0.0
**
** 璇ユ枃浠跺寘鍚簡鏁扮粍鐨勬帴鍙ｅ０鏄庯紝鏁扮粍鏄竴绉嶅悓绫诲瀷鏁版嵁闆嗗悎鐨勬暟鎹粨鏋勶紝鍏锋湁甯搁噺绾х殑涓嬫爣妫€绱㈡晥鐜囥€�
**
********************************************************************************/

#ifndef _CORE_ARRAY_H_
#define _CORE_ARRAY_H_

#include "gstruct.h"
#include "gobject.h"

namespace gsystem { // gsystem

/********************************************************************************
**
** @brief 鏁扮粍
** @template T {type} 鏁扮粍鍏冪礌鐨勭被鍨�
**
********************************************************************************/
template <typename T>
class GArray
	: public GListT<GArray<T>>
	, virtual public GObject
{
public:
	/****************************************************************************
	**
	** @name ~GArray
	** @brief 鏋愭瀯鍑芥暟锛坉estructor锛�
	**
	****************************************************************************/
	virtual ~GArray() = 0 {}

	/****************************************************************************
	**
	** @name Size
	** @brief 鑾峰彇鏁扮粍鍏冪礌鐨勬暟閲�
	** @return {gsize} 鍏冪礌鐨勬暟閲�
	**
	****************************************************************************/
	virtual gsize Size() const = 0;

	/****************************************************************************
	**
	** @name IsEmpty
	** @brief 鍒ゆ柇鏁扮粍鏄惁涓虹┖
	** @return {gbool} 鑻ュ厓绱犵殑鏁伴噺涓�0锛屽垯杩斿洖true锛屽惁鍒欒繑鍥瀎alse
	**
	****************************************************************************/
	virtual gbool IsEmpty() const = 0;

	/****************************************************************************
	**
	** @name GetAt
	** @brief 鑾峰彇鎸囧畾浣嶇疆鐨勫厓绱�
	** @param [in] pos {gsize} 鍏冪礌鐨勪笅鏍囷紝浠�0寮€濮嬭鏁�
	** @return {T &} 鍏冪礌鐨勫紩鐢�
	**
	****************************************************************************/
	virtual T &GetAt(gsize pos) = 0;

	/****************************************************************************
	**
	** @name GetAt
	** @brief 鑾峰彇鎸囧畾浣嶇疆鐨勫厓绱�
	** @param [in] pos {gsize} 鍏冪礌鐨勪笅鏍囷紝浠�0寮€濮嬭鏁�
	** @return {const T &} 鍏冪礌鐨勫紩鐢�
	**
	****************************************************************************/
	virtual const T &GetAt(gsize pos) const = 0;

	/****************************************************************************
	**
	** @name CursorAt
	** @brief 鑾峰彇鎸囧畾浣嶇疆鐨勫厓绱犵殑鍏夋爣
	** @param [in] pos {gsize} 鍏冪礌鐨勪笅鏍囷紝浠�0寮€濮嬭鏁�
	** @return {T *} 鍏冪礌鐨勬寚閽�
	**
	****************************************************************************/
	virtual T *CursorAt(gsize pos) = 0;

	/****************************************************************************
	**
	** @name CursorAt
	** @brief 鑾峰彇鎸囧畾浣嶇疆鐨勫厓绱犵殑鍏夋爣
	** @param [in] pos {gsize} 鍏冪礌鐨勪笅鏍囷紝浠�0寮€濮嬭鏁�
	** @return {const T *} 鍏冪礌鐨勬寚閽�
	**
	****************************************************************************/
	virtual const T *CursorAt(gsize pos) const = 0;

	/****************************************************************************
	**
	** @name First
	** @brief 鑾峰彇绗竴涓厓绱�
	** @return {T &} 鍏冪礌鐨勫紩鐢�
	**
	****************************************************************************/
	T &First();

	/****************************************************************************
	**
	** @name First
	** @brief 鑾峰彇绗竴涓厓绱�
	** @return {const T &} 鍏冪礌鐨勫紩鐢�
	**
	****************************************************************************/
	const T &First() const;

	/****************************************************************************
	**
	** @name Last
	** @brief 鑾峰彇鏈€鍚庝竴涓厓绱�
	** @return {T &} 鍏冪礌鐨勫紩鐢�
	**
	****************************************************************************/
	T &Last();

	/****************************************************************************
	**
	** @name Last
	** @brief 鑾峰彇鏈€鍚庝竴涓厓绱�
	** @return {const T &} 鍏冪礌鐨勫紩鐢�
	**
	****************************************************************************/
	const T &Last() const;

	/****************************************************************************
	**
	** @name FirstCursor
	** @brief 鑾峰彇绗竴涓厓绱犵殑鎸囬拡
	** @return {T *} 鍏冪礌鐨勫紩鐢�
	**
	****************************************************************************/
	T *FirstCursor();

	/****************************************************************************
	**
	** @name FirstCursor
	** @brief 鑾峰彇绗竴涓厓绱犵殑鎸囬拡
	** @return {const T *} 鍏冪礌鐨勫紩鐢�
	**
	****************************************************************************/
	const T *FirstCursor() const;
	
	/****************************************************************************
	**
	** @name LastCursor
	** @brief 鑾峰彇鏈€鍚庝竴涓厓绱犵殑鎸囬拡
	** @return {T *} 鍏冪礌鐨勫紩鐢�
	**
	****************************************************************************/
	T *LastCursor();

	/****************************************************************************
	**
	** @name LastCursor
	** @brief 鑾峰彇鏈€鍚庝竴涓厓绱犵殑鎸囬拡
	** @return {const T *} 鍏冪礌鐨勫紩鐢�
	**
	****************************************************************************/
	const T *LastCursor() const;

	/****************************************************************************
	**
	** @name Contains
	** @brief 鍒ゆ柇鏁扮粍鏄惁鍖呭惈鍊�
	** @param [in] value {const T &} 鍊肩殑寮曠敤
	** @return {gbool} 鑻ュ寘鍚鍊硷紝鍒欒繑鍥瀟rue锛屽惁鍒欒繑鍥瀎alse
	**
	****************************************************************************/
	gbool Contains(const T &value) const;

	/****************************************************************************
	**
	** @name Contains
	** @brief 鑾峰彇鏁扮粍绗竴娆″嚭鐜板€肩殑涓嬫爣
	** @param [in] value {const T &} 鍊肩殑寮曠敤
	** @return {gsize} 鍊肩殑涓嬫爣锛屼粠0寮€濮嬭鏁帮紝鑻ユ棤鍒欒繑鍥濶ULL_POS
	**
	****************************************************************************/
	gsize FirstIndexOf(const T &value) const;

	/****************************************************************************
	**
	** @name LastIndexOf
	** @brief 鑾峰彇鏁扮粍浠庢渶鍚庡紑濮嬬涓€娆″嚭鐜板€肩殑涓嬫爣
	** @param [in] value {const T &} 鍊肩殑寮曠敤
	** @return {gsize} 鍊肩殑涓嬫爣锛屼粠0寮€濮嬭鏁帮紝鑻ユ棤鍒欒繑鍥濶ULL_POS
	**
	****************************************************************************/
	gsize LastIndexOf(const T &value) const;

	/****************************************************************************
	**
	** @name CountOf
	** @brief 鍒ゆ柇鏁扮粍涓€肩殑娆℃暟
	** @param [in] value {const T &} 鍊肩殑寮曠敤
	** @return {gsize} 杩斿洖璇ュ€煎湪鏁扮粍涓嚭鐜扮殑娆℃暟
	**
	****************************************************************************/
	gsize CountOf(const T &value) const;

	/****************************************************************************
	**
	** @name operator[]
	** @brief 鑾峰彇鎸囧畾浣嶇疆鐨勫厓绱�
	** @param [in] pos {gsize} 鍏冪礌鐨勪笅鏍囷紝浠�0寮€濮嬭鏁�
	** @return {T &} 鍏冪礌鐨勫紩鐢�
	**
	** 姝ゆ柟娉曠殑瀹炵幇渚濊禆浜嶨etAt锛屽洜姝や笉瑕佸湪GetAt鐨勫疄鐜颁腑璋冪敤姝ゆ柟娉�
	**
	****************************************************************************/
	T &operator[](gsize pos);

	/****************************************************************************
	**
	** @name operator[]
	** @brief 鑾峰彇鎸囧畾浣嶇疆鐨勫厓绱�
	** @param [in] pos {gsize} 鍏冪礌鐨勪笅鏍囷紝浠�0寮€濮嬭鏁�
	** @return {const T &} 鍏冪礌鐨勫紩鐢�
	**
	** 姝ゆ柟娉曠殑瀹炵幇渚濊禆浜嶨etAt锛屽洜姝や笉瑕佸湪GetAt鐨勫疄鐜颁腑璋冪敤姝ゆ柟娉�
	**
	****************************************************************************/
	const T &operator[](gsize pos) const;
};

} // namespace gsystem

#include "inline/garray.inl"

#endif // _CORE_ARRAY_H_